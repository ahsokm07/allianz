
version: "1.0"
# Stages can help you organize your steps in stages
stages:
  - "clone"
  - "build"
  - "test"
  #- "push"
  
steps:
  clone:
    title: "Cloning repository"
    type: "git-clone"
    repo: "ahsokm07/allianz"
    # CF_BRANCH value is auto set when pipeline is triggered
    # Learn more at codefresh.io/docs/docs/codefresh-#yaml/variables/
    revision: "${{CF_BRANCH}}"
    git: "github"
    stage: "clone"

  build:
    title: "Building Docker image"
    type: "build"
    image_name: "ashokm07/testalz"
    working_directory: "${{clone}}"
    tag: "${{CF_BRANCH_TAG_NORMALIZED}}"
    dockerfile: "ci-cd-pipeline/Dockerfile"
    disable_push: yes
    stage: "build"

  test:
    title: "Running test"
    type: "freestyle" # Run any command
    image: "ubuntu:latest" # The image in which command will be #executed
    working_directory: "${{clone}}" # Running command where code #cloned
    commands:
      - "ls"
    stage: "test"
  push:
    type: push
    arguments:
      candidate: ${{build}}
      tag: latest
      image_name: ashokm07/testalz
      registry: dockerhub


##Deployment mentod using AKS 
     #DeployToMyCluster:
#      title: deploying to cluster
#      type: deploy
#      stage: deploy
#      kind: kubernetes  
#      ## cluster name as the shown in account's integration page
#      cluster:  my-demo-k8s-cluster
#      # desired namespace
#      namespace: default
#      service: python-demo
#      candidate:
#        # The image that will replace the original deployment image 
#        # The image that been build using Build step
#        image: kkapelon/pythonflasksampleapp:${{CF_BRANCH}}
#        # The registry that the user's Kubernetes cluster can pull the image from
#        # Codefresh will generate (if not found) secret and add it to the deployment so the Kubernetes master can pull it
#        registry: dockerhub 
